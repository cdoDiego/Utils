class TwitchPubSubRewards{constructor(a,b){this.topic=`channel-points-channel-v1.${a}`,this.token=b}connect(){return new Promise((a,b)=>{setTimeout(_=>{this.connection=new WebSocket("wss://pubsub-edge.twitch.tv"),this.connection.onopen=this.onOpen.bind(this),this.connection.onmessage=this.onRedeem.bind(this),this.connection.onclose=this.onClose.bind(this),a()},7500)})}onOpen(){console.log("PubSub Opened"),this.ping(),this.listen(),this.heartbeat=setInterval(this.ping.bind(this),12e4)}listen(){console.log("listen"),console.log(this.token),this.connection.send(JSON.stringify({type:"LISTEN",data:{topics:[this.topic],auth_token:this.token}}))}onClose(){console.log("PubSub Closed ",Date.now()),clearInterval(this.heartbeat)}ping(){console.log("PubSub Ping ",Date.now()),this.connection.send(JSON.stringify({type:"PING"}))}reconnect(){console.log("PubSub connection closed By Twitch ",Date.now()),this.connection.close()}onRedeem({data:a}){if(a=JSON.parse(a),console.log(a),"RESPONSE"!==a.type&&"PONG"!==a.type){if("RECONNECT"===a.type)return this.reconnect();if("MESSAGE"===a.type&&a.data.topic===this.topic){let b=JSON.parse(a.data.message);if("reward-redeemed"===b.type)return this.emitPuSub(b)}}}emitPuSub(a){console.log(a),console.log(a.data.redemption),console.log(a.data.redemption.reward);let b=new CustomEvent("onEventReceived",{detail:{listener:"reward-redeemed",event:{service:"twitch",data:{time:new Date(a.data.timestamp).getTime(),tags:a,nick:a.data.redemption.user.login,userId:a.data.redemption.user.id,displayName:a.data.redemption.user.display_name,text:a.data.redemption.user_input,rewardId:a.data.redemption.reward.id,rewardTitle:a.data.redemption.reward.title,id:a.data.redemption.id}}}});window.dispatchEvent(b)}}
console.log('listo xd TwitchPubSubRewards');